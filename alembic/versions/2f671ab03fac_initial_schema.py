"""initial schema

Revision ID: 2f671ab03fac
Revises: 
Create Date: 2025-04-20 21:58:35.122942

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '2f671ab03fac'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('proxies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('ip', sa.String(), nullable=False),
    sa.Column('port', sa.Integer(), nullable=False),
    sa.Column('login', sa.String(), nullable=True),
    sa.Column('password', sa.String(), nullable=True),
    sa.Column('country', sa.String(), nullable=True),
    sa.Column('type', sa.String(), nullable=True),
    sa.Column('is_working', sa.Boolean(), nullable=True),
    sa.Column('last_checked', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_proxies_is_working_last_checked', 'proxies', ['is_working', 'last_checked'], unique=False)
    op.create_table('farm_tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('target_url', sa.String(), nullable=False),
    sa.Column('instructions', sa.JSON(), nullable=False),
    sa.Column('assigned_proxy_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'processing', 'success', 'failed', name='statusenum'), nullable=False),
    sa.Column('error', sa.Text(), nullable=True),
    sa.Column('attempts_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['assigned_proxy_id'], ['proxies.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_farm_tasks_status_created', 'farm_tasks', ['status', 'created_at'], unique=False)
    op.create_table('user_sessions',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('farm_task_id', sa.Integer(), nullable=True),
    sa.Column('proxy_id', sa.Integer(), nullable=False),
    sa.Column('cookies', sa.JSON(), nullable=False),
    sa.Column('user_agent', sa.String(), nullable=False),
    sa.Column('fingerprint', sa.JSON(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('expires_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['farm_task_id'], ['farm_tasks.id'], ),
    sa.ForeignKeyConstraint(['proxy_id'], ['proxies.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('farm_task_id')
    )
    op.create_index('ix_user_sessions_expires', 'user_sessions', ['expires_at'], unique=False)
    op.create_table('job_tasks',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('session_id', sa.Integer(), nullable=False),
    sa.Column('instructions', sa.JSON(), nullable=False),
    sa.Column('status', sa.Enum('pending', 'processing', 'success', 'failed', name='statusenum'), nullable=False),
    sa.Column('error', sa.Text(), nullable=True),
    sa.Column('attempts_count', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['user_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_job_tasks_status_created', 'job_tasks', ['status', 'created_at'], unique=False)
    op.create_table('job_reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('job_task_id', sa.Integer(), nullable=False),
    sa.Column('status_code', sa.Integer(), nullable=True),
    sa.Column('result_text', sa.Text(), nullable=True),
    sa.Column('report_metadata', sa.JSON(), nullable=True),
    sa.Column('error', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['job_task_id'], ['job_tasks.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index('ix_job_reports_job_task_created', 'job_reports', ['job_task_id', 'created_at'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_job_reports_job_task_created', table_name='job_reports')
    op.drop_table('job_reports')
    op.drop_index('ix_job_tasks_status_created', table_name='job_tasks')
    op.drop_table('job_tasks')
    op.drop_index('ix_user_sessions_expires', table_name='user_sessions')
    op.drop_table('user_sessions')
    op.drop_index('ix_farm_tasks_status_created', table_name='farm_tasks')
    op.drop_table('farm_tasks')
    op.drop_index('ix_proxies_is_working_last_checked', table_name='proxies')
    op.drop_table('proxies')
    # ### end Alembic commands ###
